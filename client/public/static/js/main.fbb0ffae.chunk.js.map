{"version":3,"sources":["Login.js","Signup.js","Logout.js","FeedPage.js","StarRating.js","MakePost.js","UserPage.js","ShowPage.js","CommentForm.js","CommentContainer.js","TweetPage.js","CommentPage.js","photo.jpeg","App.js","reportWebVitals.js","index.js"],"names":["Login","onLogin","fetchProfiles","useState","login","setLogin","username","setUserName","password","setPassword","loginBox","className","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","json","user","alert","error","type","value","onChange","target","placeholder","onClick","Signup","signup","setSignup","setUsername","passwordConfirmation","setPasswordConfirmation","age","setAge","email","setEmail","photo","setPhoto","bio","setBio","signupBox","data","errors","forEach","Logout","handleLogout","FeedPage","posts","commentForm","users","setCommentForm","showCommentForm","console","log","post","length","map","src","to","id","content","show","name","StarRating","rating","setRating","Array","star","index","MakePost","handleAddPost","setMakePostDisplay","makePostDisplay","setContent","makeFirstPostIsHidden","setMakeFirstPostIsHidden","makeSecondPostHidden","setMakeSecondPostHidden","setUser","setShow","search","setSearch","showStars","setShowStars","history","useHistory","handleWritePostClick","push","reset","useEffect","response","ok","searchData","event","showSelected","formData","show_id","user_id","show_name","ratingData","newPost","newrating","UserPage","useParams","ShowPage","author","img","CommentForm","postData","handleAddComment","commentData","post_id","parseInt","comment","CommentContainer","comments","TweetPage","handleDeletePost","setPost","filteredComments","filter","CommentPage","handleDeleteComment","setComment","App","setPosts","setUsers","setComments","location","useLocation","handleReroute","pathname","res","exact","path","updatedPosts","updatedComments","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbb0ffae.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nfunction Login({ onLogin, fetchProfiles }) {\n  const [login, setLogin] = useState(false);\n  const [username, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // login\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    })\n      .then((r) => r.json())\n      .then((user) => (user.username ? onLogin(user) : alert(user.error)));\n    setUserName(\"\");\n    setPassword(\"\");\n  }\n\n  //\n\n  const loginBox = (\n    <div className=\"login\">\n      <div>\n        <form onSubmit={handleSubmit}>\n          <div>\n            <div className=\"mb-3\"></div>\n            <input\n              type=\"text\"\n              value={username}\n              onChange={(e) => setUserName(e.target.value)}\n              placeholder=\"Username\"\n            ></input>\n            <div className=\"mb-3\">\n              <input\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                placeholder=\"Password\"\n              ></input>\n            </div>\n            <input type=\"submit\" className=\"btn btn-outline-light\"></input>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <nav>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-light\"\n          onClick={() => setLogin(!login)}\n        >\n          Login\n        </button>\n        {login ? loginBox : null}\n      </nav>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from 'react'\nimport { useState } from 'react'\n\nfunction Signup ({ login }) {\n  const [signup, setSignup] = useState(false)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  const [age, setAge] = useState('')\n  const [email, setEmail] = useState('')\n  const [photo, setPhoto] = useState('')\n  const [bio, setBio] = useState('')\n\n  function handleSignup (e) {\n    e.preventDefault()\n    fetch('/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        passwordConfirmation,\n        age,\n        email,\n        photo,\n        bio\n      })\n    })\n      .then(r => r.json())\n      .then(data => {\n        if (data.errors) {\n          data.errors.forEach(e =>\n            e === 'Age must be greater than or equal to 18'\n              ? alert('Must be 18 or older')\n              : alert(e)\n          )\n        } else {\n          setSignup(false)\n          setUsername('')\n          setPassword('')\n          setPasswordConfirmation('')\n          setAge('')\n          setEmail('')\n          setPhoto('')\n          setBio('')\n          alert('Profile Successfully Created! Please Log In.')\n        }\n      })\n  }\n\n  const signupBox = (\n    <div className='signup'>\n      <form onSubmit={handleSignup}>\n        <div>\n          <input\n            type='text'\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n            placeholder='username'\n          />\n        </div>\n        <div>\n          <input\n            type='password'\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            placeholder='password'\n          />\n        </div>\n        <div>\n          <input\n            type='password'\n            value={passwordConfirmation}\n            onChange={e => setPasswordConfirmation(e.target.value)}\n            placeholder='password confirmation'\n          />\n        </div>\n        <div>\n          <input\n            type='text'\n            value={age}\n            onChange={e => setAge(e.target.value)}\n            placeholder='age'\n          />\n        </div>\n        <div>\n          <input\n            type='text'\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n            placeholder='email'\n          />\n        </div>\n        <div>\n          <input\n            type='text'\n            value={photo}\n            onChange={e => setPhoto(e.target.value)}\n            placeholder='photo'\n          />\n        </div>\n        <div>\n          <input\n            type='text'\n            value={bio}\n            onChange={e => setBio(e.target.value)}\n            placeholder='bio'\n          />\n        </div>\n        <div>\n          <input type='submit' className='btn btn-outline-light'></input>\n        </div>\n      </form>\n    </div>\n  )\n\n  return (\n    <div>\n      <nav>\n        <button\n          type='button'\n          className='btn btn-outline-light'\n          onClick={() => setSignup(!signup)}\n        >\n          Sign Up\n        </button>\n        {signup ? signupBox : null}\n      </nav>\n    </div>\n  )\n}\n\nexport default Signup\n","function Logout({ handleLogout }) {\n    return (\n      <header>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-danger\"\n          onClick={handleLogout}\n        >\n          Logout\n        </button>\n      </header>\n    );\n  }\n  \n  export default Logout;\n  ","import { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nfunction FeedPage({ posts, users, commentForm, setCommentForm }) {\n  function showCommentForm() {\n    setCommentForm((commentForm) => true);\n  }\n  console.log(posts);\n  let post = [];\n  if (posts && posts.length !== 0) {\n    post = posts.map((post) => (\n      <div key={post.id}>\n        <div className=\"user-feed-container\">\n          <img className=\"feedSize\" src={post.user.photo}></img>{\" \"}\n          <div className=\"username\">\n            <Link to={`/users/${post.user.username}`}>\n              {post.user.username}\n            </Link>\n          </div>\n          <div className=\"post-space\">\n            <Link to={`/posts/${post.id}`}>\n              <button className=\"button2\">{post.content}</button>\n            </Link>\n          </div>\n          <div className=\"writepost\">\n            <Link to={`/posts/${post.id}`}>\n              <button onClick={showCommentForm}>Make Comment</button>\n            </Link>\n          </div>\n          <div className=\"post-container2\">\n            <Link to={`/shows/${post.show.name}`}>#{post.show.name}</Link>\n          </div>\n          <div className=\"post-container\">\n            <Link to={`/posts/${post.id}`}>\n              <button className=\"button2\">See Comments</button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    ));\n  } else {\n    return null;\n  }\n  console.log(commentForm);\n  return (\n    <div className=\"user-feed-container\">\n      <div className=\"user-feed-container\">{post}</div>\n    </div>\n  );\n}\n\nexport default FeedPage;\n","import { useEffect, useState } from 'react'\n\nfunction StarRating ({ rating, setRating }) {\n  return (\n    <div className='post-size2'>\n      {[...Array(5)].map((star, index) => {\n        index += 1\n\n\n\n\n        return (\n          <button\n            type='button'\n            key={index}\n            className={index <= rating ? 'on' : 'off'}\n            onClick={() => setRating(index)}\n          >\n            <span>&#9733;</span>\n          </button>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default StarRating\n","import { useEffect, useState } from 'react'\nimport StarRating from './StarRating'\nimport { useHistory, Link } from 'react-router-dom'\n\nfunction MakePost ({ handleAddPost, makePostDisplay, setMakePostDisplay }) {\n  const [content, setContent] = useState('')\n  const [makeFirstPostIsHidden, setMakeFirstPostIsHidden] = useState(false)\n  const [makeSecondPostHidden, setMakeSecondPostHidden] = useState(false)\n  const [user, setUser] = useState('')\n  const [show, setShow] = useState('')\n  const [search, setSearch] = useState('')\n  const [showStars, setShowStars] = useState(false)\n  const [rating, setRating] = useState(null)\n  const history = useHistory()\n\n  const handleReroute = () => {\n    console.log('Reroute!')\n    history.push('/')\n  }\n\n  useEffect(() => {\n    fetch('/me').then(response => {\n      if (response.ok) {\n        response.json().then(data => setUser(data))\n      }\n    })\n  }, [])\n\n  function handlePost (event) {\n    setContent(event.target.value)\n  }\n\n  function handleShow (event) {\n    setSearch(event.target.value)\n  }\n\n  function handleSearch (e) {\n    e.preventDefault()\n    const searchData = { name: search }\n    fetch('/search', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(searchData)\n    })\n      .then(r => r.json())\n      .then(show => (show.name ? setShow(show) : reset2()))\n    setMakeSecondPostHidden(makeSecondPostHidden => !makeSecondPostHidden)\n    setMakeFirstPostIsHidden(makeFirstPostIsHidden => !makeFirstPostIsHidden)\n    setSearch('')\n  }\n\n  function showSelected () {\n    if (\n      (show.name && makeFirstPostIsHidden === true) ||\n      (makeSecondPostHidden === true && show.name)\n    ) {\n      return (\n        <h3 className='header'>\n          You are writing a post about the book, {show.name}\n        </h3>\n      )\n    }\n  }\n\n  function handleSubmit (e) {\n    e.preventDefault()\n    const formData = {\n      content: content,\n      show_id: show.id,\n      user_id: user.id,\n      username: user.username,\n      show_name: show.name\n    }\n\n    const ratingData = { rating: rating, show_id: show.id, user_id: user.id }\n\n    console.log(formData)\n    fetch('/posts', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    })\n      .then(r => r.json())\n      .then(newPost => handleAddPost(newPost))\n    setMakePostDisplay(makePostDisplay => !makePostDisplay)\n    reset()\n    setContent('')\n\n\n   \n      fetch(`/ratings`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(ratingData)\n      })\n        .then(r => r.json())\n        .then(newrating => console.log(newrating))\n    \n  }\n\n  console.log(\"rating\", rating)\n  function handleWritePostClick () {\n    setMakeFirstPostIsHidden(makeFirstPostIsHidden => !makeFirstPostIsHidden)\n    setMakePostDisplay(makePostDisplay => !makePostDisplay)\n    handleReroute()\n  }\n\n  function buttonToShow () {\n    if (makeFirstPostIsHidden === false && makeSecondPostHidden === false) {\n      return (\n        <button className='submit-forms' onClick={handleWritePostClick}>\n          Write a Post\n        </button>\n      )\n    } else if (\n      makeFirstPostIsHidden === true &&\n      makeSecondPostHidden === false\n    ) {\n      return (\n        <div className='submit-forms'>\n          <button className='button-center' onClick={handleWritePostClick}>\n            Don't Write a Post{' '}\n          </button>\n        </div>\n      )\n    } else {\n      return null\n    }\n  }\n\n  function reset () {\n    setMakeSecondPostHidden(makeSecondPostHidden => false)\n    setMakeFirstPostIsHidden(makeFirstPostIsHidden => false)\n    setShow('')\n    setMakePostDisplay(makePostDisplay => false)\n  }\n\n  function reset2 () {\n    setMakeSecondPostHidden(makeSecondPostHidden => false)\n    setMakeFirstPostIsHidden(makeFirstPostIsHidden => true)\n    setShow('')\n    setMakePostDisplay(makePostDisplay => true)\n    alert('Book not found, try again')\n  }\n\n  function showRating () {\n    setShowStars(showStars => !showStars)\n    setRating(rating => null)\n  }\n\n  return (\n    <>\n      <div>\n        {makeFirstPostIsHidden === true ? (\n          <div>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <h4 className='header3'>\n              Search for the book you would like to post about\n            </h4>\n            <form onSubmit={handleSearch}>\n              <input\n                className='header4'\n                type='text'\n                placeholder='Book Name'\n                onChange={handleShow}\n                value={search}\n              />\n              <button type='Submit'>Search</button>\n            </form>{' '}\n            <br></br>\n          </div>\n        ) : null}\n\n        {makeSecondPostHidden && show.name ? (\n          <div>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            {showSelected()}\n            <div className='header2'>\n              <form onSubmit={handleSubmit}>\n                <input\n                  className='post-size'\n                  type='text'\n                  placeholder='     Write your post'\n                  onChange={handlePost}\n                  value={content}\n                />\n                <button className='button' type='submit'>\n                  Submit\n                </button>\n              </form>\n              <br></br>\n              <button onClick={showRating} className='post-size5'>\n                {showStars ? \"Don't Rate Book\" : 'Rate the Book!'}{' '}\n              </button>\n              {showStars ? (\n                <div className='post-size6' >\n                  <br></br>\n                  <StarRating rating={rating} setRating={setRating} />\n                </div>\n              ) : null}\n            </div>\n            <div>\n              <br></br>\n              <button onClick={reset}>Don't Make a Post </button>\n            </div>\n          </div>\n        ) : null}\n        {buttonToShow()}\n      </div>\n    </>\n  )\n}\nexport default MakePost\n","import { Link } from 'react-router-dom'\nimport { useParams } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\n\n\nfunction UserPage () {\n  const { username } = useParams()\n  const [user, setUser] = useState('')\n  const searchData = { username: username }\n\n  useEffect(() => {\n    fetch('/getuser', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(searchData)\n    })\n      .then(r => r.json())\n      .then(user => setUser(user))\n  }, [])\n\n  let post = []\n  if (user.posts && user.posts.length !== 0) {\n    post = user.posts.map(post => (\n      <div>\n        <div className='post-container'>\n          <Link to={`/shows/${post.show_name}`}>#{post.show_name}</Link>\n        </div>\n        <div className='post-container-plus'>\n          <Link to={`/posts/${post.id}`}>\n            <button className='button2'>{post.content}</button>\n          </Link>\n        </div>\n        <div className='post-container'>\n          <Link to={`/posts/${post.id}`}>\n            <button className='button2'>See Comments</button>\n          </Link>\n        </div>\n      </div>\n    ))\n  }\n\n  return (\n    <div>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <div className='post-container'>\n        <img className='user-feed-image' src={user.photo}></img>\n      </div>\n      <div className='post-container'>{user.username}</div>\n      <div className='post-container'>{user.bio}</div>\n      <br></br>\n\n      <div className='post-container-plus'>{post}</div>\n    </div>\n  )\n}\n\nexport default UserPage\n","import { useParams } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction ShowPage ({ users }) {\n  const { name } = useParams()\n  const [rating, setRating] = useState(null)\n  const [show, setShow] = useState('')\n  const searchData = {\n    name: name\n  }\n\n  useEffect(() => {\n    fetch('/search', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(searchData)\n    })\n      .then(r => r.json())\n      .then(show => setShow(show))\n  }, [])\n  let post = []\n\n  if (show.posts && show.posts.length !== 0) {\n    post = show.posts.map(post => (\n      <div>\n        <div className='post-container'>\n          <Link to={`/users/${post.username}`}>{post.username}</Link>\n        </div>\n        <div className='post-container-plus'>\n          <Link to={`/posts/${post.id}`}>\n            <button className='button2'>{post.content}</button>\n          </Link>\n          <div className='post-container'>\n            <Link to={`/posts/${post.id}`}>\n              <button className='button2'>See Comments</button>\n            </Link>\n          </div>\n          <br></br>\n        </div>\n      </div>\n    ))\n  }\n\n  return (\n    <div>\n      <br></br>\n      <br></br>\n      <br></br>\n      <h1 className='post-container6'>{show.name}</h1>\n      <div className='post-container'>\n        <h3 className='author-container'>{show.author}</h3>\n        <img img className='book-size' src={show.photo}></img>\n        <h4 className='post-container'>Rating based on users voting </h4>\n        <div className='post-container'>\n          <div className='star-rating'>\n            {[...Array(5)].map((star, index) => {\n              index += 1\n              return (\n                <button\n                  type='button'\n                  key={index}\n                  className={index <= show.rating ? 'on' : 'off'}\n                >\n                  <span>&#9733;</span>\n                </button>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n      <br></br>\n      <div className='post-container'>{post}</div>\n    </div>\n  )\n}\n\nexport default ShowPage\n","import { useState, useEffect } from 'react'\n\nfunction CommentForm ({\n  postData,\n  user,\n  commentForm,\n  setCommentForm,\n  handleAddComment\n}) {\n  const [content, setContent] = useState('')\n\n  console.log(postData)\n  console.log(user)\n  function handleSubmit (e) {\n    e.preventDefault()\n    const commentData = {\n      post_id: parseInt(postData.id),\n      user_id: user.id,\n      content: content,\n      username: user.username\n    }\n    fetch('/comments', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(commentData)\n    })\n      .then(r => r.json())\n      .then(comment => handleAddComment(comment))\n    setCommentForm(commentForm => false)\n    setContent('')\n  }\n\n  function handleComment (e) {\n    setContent(e.target.value)\n  }\n\n  return (\n    <div>\n      <div className='header2'>\n        <form onSubmit={handleSubmit}>\n          <input\n            className='post-size4'\n            type='text'\n            placeholder='   Write your comment'\n            onChange={handleComment}\n            value={content}\n          />\n          <br></br>\n          <div className='post-size3'>\n            <button className='button' type='submit'>\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default CommentForm\n","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport CommentForm from \"./CommentForm\";\n\nfunction CommentContainer({ post, comments, handleAddComment }) {\n  console.log(\"comments\", comments);\n  let comment = [];\n  if (comments)\n    comment = comments.map((comment) => (\n      <div className=\"post-container\">\n        <div className=\"tweet-page-comment\">\n          <Link to={`/users/${comment.username}`}>{comment.username}</Link>\n          </div>\n          <div className=\"post-container\">\n            <div className=\"post-container\">\n              <Link to={`/comments/${comment.id}`}>\n                <button className=\"button2\">{comment.content}</button>\n              </Link>\n            </div>\n         \n        </div>\n      </div>\n    ));\n\n  return <div>{comment}</div>;\n}\n\nexport default CommentContainer;\n","import { useParams } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport CommentForm from './CommentForm'\nimport CommentContainer from './CommentContainer'\n\nfunction TweetPage ({\n  handleDeletePost,\n  setCommentForm,\n  commentForm,\n  comments,\n  handleAddComment\n}) {\n  const [post, setPost] = useState('')\n  const [user, setUser] = useState('')\n  const history = useHistory()\n  const { id } = useParams()\n  const postData = {\n    id: id\n  }\n\n  function handleGetForm () {\n    setCommentForm(commentForm => !commentForm)\n  }\n\n  useEffect(() => {\n    fetch('/me').then(response => {\n      if (response.ok) {\n        response.json().then(data => setUser(data))\n      }\n    })\n  }, [])\n\n  useEffect(() => {\n    fetch('/getpost', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(postData)\n    })\n      .then(r => r.json())\n      .then(post => setPost(post))\n  }, [])\n\n  let filteredComments = []\n  if (comments && comments.length !== 0) {\n    filteredComments = comments.filter(\n      comment => comment.post_id === parseInt(id)\n    )\n  }\n\n  function handleDelete () {\n    fetch(`/posts/${post.id}`, {\n      method: 'DELETE'\n    }).then(() => console.log('deleted!'))\n    handleDeletePost(post.id)\n    toDelete(post.id)\n\n    alert('You have deleted the post')\n  }\n\n  console.log('comments', comments)\n\n  const handleReroute = () => {\n    console.log('Reroute!')\n    history.push('/')\n  }\n\n  function toDelete (id) {\n    setPost(null)\n    handleReroute()\n  }\n\n  return (\n    <div>\n      {post ? (\n        <div>\n          <br></br>\n          <br></br>\n          <br></br>\n          <div className='post-container'>\n            <img className='tweetimage' src={post.user.photo}></img>{' '}\n          </div>\n          <div className='post-container'>\n            <Link to={`/users/${post.username}`}>{post.username}</Link>\n          </div>\n          <div className='post-container'>{post.content}</div>\n          {post.username === user.username ? (\n            <div className = \"comment-delete2\">\n            <button onClick={handleDelete} className='delete-post'>\n              Delete Post\n            </button>\n            </div>\n          ) : null}\n          <div className='side-nav'>\n            <button onClick={handleGetForm}>\n              {commentForm ? \"Don't Make a Comment\" : 'Make a Comment'}\n            </button>\n          </div>\n          <br></br>\n          {commentForm ? (\n            <div className='submit-forms'>\n              {' '}\n              <br></br> <br></br>{' '}\n              <CommentForm\n                setCommentForm={setCommentForm}\n                commentForm={commentForm}\n                postData={postData}\n                user={user}\n                handleAddComment={handleAddComment}\n              />{' '}\n            </div>\n          ) : null}\n          {commentForm ? null : (\n            <div>\n              <h3 className='comments-headline'>Comments</h3>\n              <CommentContainer post={post} comments={filteredComments} />\n            </div>\n          )}\n        </div>\n      ) : (\n        <div>\n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n          <h3> Post was deleted!</h3>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default TweetPage\n","import { useParams } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\n\nfunction CommentPage ({ handleDeleteComment }) {\n  const [user, setUser] = useState('')\n  const [comment, setComment] = useState('')\n  const history = useHistory()\n  const { id } = useParams()\n  const commentData = {\n    id: id\n  }\n\n  useEffect(() => {\n    fetch('/me').then(response => {\n      if (response.ok) {\n        response.json().then(data => setUser(data))\n      }\n    })\n  }, [])\n\n  useEffect(() => {\n    fetch('/getcomment', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(commentData)\n    })\n      .then(r => r.json())\n      .then(comment => setComment(comment))\n  }, [])\n\n  function handleDelete () {\n    fetch(`/comments/${comment.id}`, {\n      method: 'DELETE'\n    }).then(() => console.log('deleted!'))\n    handleDeleteComment(comment.id)\n    toDelete(comment.id)\n\n    alert('You have deleted the comment')\n  }\n\n  const handleReroute = () => {\n    console.log('Reroute!')\n    history.push('/')\n  }\n\n  function toDelete (id) {\n    setComment(null)\n    handleReroute()\n  }\n\n  return (\n    <div>\n      {comment ? (\n        <div>\n          <br></br>\n          <br></br>\n          <br></br>\n          <div className='post-container'>\n            <Link to={`/users/${comment.username}`}>{comment.username}</Link>\n          </div>\n          <div className='post-container'>{comment.content}</div>\n        </div>\n      ) : null}\n      {comment.username === user.username ? (\n        <div className = \"comment-delete\">\n        <button onClick={handleDelete} className='delete-post'>\n          Delete Comment\n        </button> </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default CommentPage\n","export default __webpack_public_path__ + \"static/media/photo.0d6f338a.jpeg\";","import Login from './Login.js'\nimport { useState, useEffect } from 'react'\nimport Signup from './Signup'\nimport Logout from './Logout.js'\nimport { Route, Switch, useHistory, Link, useLocation } from 'react-router-dom'\nimport FeedPage from './FeedPage.js'\nimport MakePost from './MakePost.js'\nimport UserPage from './UserPage'\nimport ShowPage from './ShowPage'\nimport TweetPage from './TweetPage'\nimport CommentPage from './CommentPage'\nimport photo from './photo.jpeg'\n\nfunction App () {\n  const [user, setUser] = useState(null)\n  const [posts, setPosts] = useState([])\n  const [users, setUsers] = useState([])\n  const [comments, setComments] = useState([])\n  const history = useHistory()\n  const location = useLocation()\n  const [makePostDisplay, setMakePostDisplay] = useState(false)\n  const [commentForm, setCommentForm] = useState(false)\n\n  const handleReroute = () => {\n    console.log('Reroute!')\n    history.push('/')\n  }\n\n  useEffect(() => {\n    fetch('/me').then(response => {\n      if (response.ok) {\n        response.json().then(data => setUser(data))\n      }\n    })\n  }, [])\n\n  console.log('location', location.pathname)\n\n  function login (username, password) {\n    fetch('/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ username, password })\n    })\n      .then(r => r.json())\n      .then(data => (user.username ? setUser(data) : null))\n  }\n\n  function handleAddPost (newPost) {\n    setPosts([newPost, ...posts])\n  }\n  function handleDeletePost (id) {\n    const updatedPosts = posts.filter(post => post.id !== id)\n    setPosts(updatedPosts)\n  }\n\n  useEffect(() => {\n    fetch('/posts')\n      .then(res => res.json())\n      .then(data => setPosts(data))\n  }, [])\n\n  useEffect(() => {\n    fetch('/users')\n      .then(res => res.json())\n      .then(data => setUsers(data))\n  }, [])\n\n  useEffect(() => {\n    fetch('/comments')\n      .then(res => res.json())\n      .then(data => setComments(data))\n  }, [])\n\n  function handleLogout () {\n    fetch('/logout', {\n      method: 'DELETE'\n    })\n      .then(() => setUser())\n      .then(() => handleReroute())\n  }\n\n  function handleAddComment (comment) {\n    setComments([comment, ...comments])\n  }\n\n  function handleDeleteProfile () {\n    fetch(`/users/${user.id}`, {\n      method: 'DELETE'\n    })\n      .then(() => setUser())\n      .then(() => handleReroute())\n  }\n\n  function handleDeleteComment (id) {\n    const updatedComments = comments.filter(comment => comment.id !== id)\n    setComments(updatedComments)\n  }\n\n  return (\n    <div>\n      <div>\n        <div>\n          <nav className='nav'>\n            {user ? null : <Signup onLogin={setUser} login={login} />}\n            {user ? (\n              <Logout handleLogout={handleLogout} />\n            ) : (\n              <Login onLogin={setUser} />\n            )}\n            {user ? (\n              <MakePost\n                makePostDisplay={makePostDisplay}\n                setMakePostDisplay={setMakePostDisplay}\n                handleAddPost={handleAddPost}\n                user={user}\n                setUser={setUser}\n              />\n            ) : null}\n            {/* {user && location.pathname !==\"/messages\" ? <Link to=\"/messages\">\n    <button >Messages</button>\n    </Link>: null} */}\n            {/* {user && location.pathname !==\"/vote\" ? <Link to=\"/vote\">\n    <button >Rate the Movie</button>\n    </Link>: null} */}\n            {user && location.pathname !== '/' ? (\n              <Link to='/'>\n                <button>Home</button>\n              </Link>\n            ) : null}\n          </nav>\n          <br></br>\n          {user ? null : <h1 className='below-nav3'>Read & Talk</h1>}\n          {user ? null : <img src={photo} className='size'></img>}\n        </div>\n      </div>\n      <Switch>\n        <Route exact path='/'>\n          <div>\n            {user && makePostDisplay === false ? (\n              <h1 className='below-nav'>Welcome {user.username} </h1>\n            ) : null}\n          </div>\n          {user && makePostDisplay === false ? (\n            <FeedPage\n              user={user}\n              setUser={setUser}\n              posts={posts}\n              users={users}\n              commentForm={commentForm}\n              setCommentForm={setCommentForm}\n            />\n          ) : null}\n     \n        </Route>\n        <Route exact path={`/users/:username`}>\n          <UserPage\n            users={users}\n            commentForm={commentForm}\n            setCommentForm={setCommentForm}\n          />\n        </Route>\n        <Route exact path={`/shows/:name`}>\n          <ShowPage\n            users={users}\n            commentForm={commentForm}\n            setCommentForm={setCommentForm}\n          />\n        </Route>\n      \n    \n        <Route exact path={`/posts/:id`}>\n          <TweetPage\n            user={user}\n            handleDeletePost={handleDeletePost}\n            commentForm={commentForm}\n            setCommentForm={setCommentForm}\n            handleAddComment={handleAddComment}\n            comments={comments}\n          />\n        </Route>\n        <Route exact path={`/comments/:id`}>\n          <CommentPage\n            handleAddComment={handleAddComment}\n            handleDeleteComment={handleDeleteComment}\n            user={user}\n            comments={comments}\n          />\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n\n"],"sourceRoot":""}